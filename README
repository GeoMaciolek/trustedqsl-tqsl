TrustedQSL SDK

What is?

It is an open software digital signature scheme to sign amateur
radio QSL cards.  It uses OpenSSL (www.openssl.org) crypto
DSA library to create the digital signatures.  I picked openssl
because it is portable and falls under the LGPL license which
means that software authors that use tqsl library DOES NOT
have to release source code.  

The size of a cert which includes the public key is 358 bytes.
The size of a signedQSL is around 1k.  This means that more than
a 1000 signed trusted QSL could be stored on a single floppy.

Since the last release names have been changed.  In fact now
they are as much for example as part of the kit.

Currently working:

tqgenkey - This will create a public/private key pair.

tqgencert - This will create a cert for the public key.  To be used
only by CA's.  Still needs issue/expiration date functions.

tqchkcert - This validate a cert.  Can be used by anyone to validate
a public cert.

The external API is starting to take form:

tqslReadCert - Read a cert from a file

tqslWriteCert - write a cert to a file

tqslReadPub - read a public key from a file

tqslWritePub - write a public key to a file

tqslGenNewKeys - create a randon match pair of keys

tqslSignCert - Sign a cert.  This is used by CA to create a cert.

tqslCheckCert - This function validate that a cert is validate
and has not been tampered with.

tqslSignData - Sign a message with a private key

tqslVerifyData - validates who the message is from and that it hasn't
been tampered with.

*** Not done yet! ***

tqslSignQSL - Sign a QSL record. 

tqslVerifyQSL - verify a QSL record.

 
TODO list (not in order):

1. Make sure that Microsoft C++ will compile and like.

2. Make a DLL useable by other languages other than Microsoft C++.

3. Clean up functions (pretty much done.  Need more comments).

4. Get it into hands of software developers.

5.  Need portable and secure key rings.

6. Need design and user guides

7. Needs award sponsors and software developers participation
in setting standard formats.

8. Need (CRL) Cert Revocation List support.  I don't expect this to
be used often because the only reason to revoke a cert is if
the private key has been compromised.  Award sponsors may keep
a list of amateurs that are not trusted, but that is different
than a cert being invalidated.  If a private key is lost then
a new cert is issued, but the old one is still valid, because
it can only be used to validate signature on the old key.  The
only reason to revoke a cert is if the private key is compromised.
Not really sure what form this should take.  The only
data that would be require is Cert Id, CA Id, CA signature.
My guess is we won't have more than a dozen or so a year.





