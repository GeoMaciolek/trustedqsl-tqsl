# Makefile.in generated by automake 1.7.8 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# J. Bloom, 11/4/2003
# TrustedQSL applications

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD = @BUILD@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CP = @CP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPAT = @EXPAT@
INNODIR = @INNODIR@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

LIBS = @LIBS@ $(openssl_static)
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR = @MKDIR@
OBJEXT = @OBJEXT@
OPENSSL = @OPENSSL@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOUCH = @TOUCH@
TQSLINC = @TQSLINC@
TQSLLIB = @TQSLLIB@
VERSION = @VERSION@
WINTQSLDIR = @WINTQSLDIR@
WINVER = @WINVER@
WINWD = @WINWD@
WXDIR = @WXDIR@
ZLIB = @ZLIB@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
add_targets = @add_targets@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@

datadir = @datadir@/TrustedQSL
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
platform = @platform@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
tqslcertresources = @tqslcertresources@
wxwin_libs = @wxwin_libs@
WXWIN_STATIC = @wxwin_static@

WXCONFIG = "$(WXDIR)/bin/wx-config"
WXRSRC = $(WXDIR)/lib/lib`$(WXCONFIG) --basename`-`$(WXCONFIG) --version`.rsrc
helpdir = $(datadir)

AM_CXXFLAGS = -Wall `$(WXCONFIG) --cxxflags` -I$(TQSLINC) -I$(ZLIB)/include -I$(EXPAT)/include
AM_LDFLAGS = -L$(TQSLLIB) -L$(ZLIB)/lib -L$(EXPAT)/lib -L$(OPENSSL)/lib

BUILT_SOURCES = tqslbuild.h tqslcertbuild.h helpdir icondir

EXTRA_PROGRAMS = 

bin_PROGRAMS = tqsl tqslcert @add_targets@

tqsl_LDADD = @tqslcertresources@ @wxwin_libs@
tqsl_DEPENDENCIES = @tqslcertresources@

tqslcert_LDADD = @tqslcertresources@ @wxwin_libs@
tqslcert_DEPENDENCIES = @tqslcertresources@

tqslcert_SOURCES = tqslcert.cpp crqwiz.cpp dxcc.cpp certtree.cpp tqslcert_prefs.cpp \
	getpassword.cpp extwizard.cpp loadcertwiz.cpp wxutil.cpp \
	certtree.h tqslcertctrls.h util.h dxcc.h crqwiz.h getpassword.h extwizard.h \
	tqslcert_prefs.h \
	getpassword.h loadcertwiz.h wxutil.h \
	cert.xpm nocert.xpm broken-cert.xpm folder.xpm


tqsl_SOURCES = tqsl.cpp extwizard.cpp tqslwiz.cpp dxcc.cpp stationdial.cpp qsodatadialog.cpp \
	tqslvalidator.cpp tqsl_prefs.cpp wxutil.cpp tqslcert.h tqslapp.h \
	tqslwiz.h qsodatadialog.h tqslexcept.h tqslpaths.h stationdial.h dxcc.h tqsl_prefs.h \
	extwizard.h certtree.h tqslvalidator.h \
	left.xpm right.xpm bottom.xpm top.xpm


noinst_SCRIPTS = 

CLEANFILES = tqslbuild.h tqslcertbuild.h tqsl-@WINVER@.exe ChangeLog.txt \
	quick.txt setup-is.iss LICENSE.txt


nobase_help_DATA = help/tqslcert/*.* help/tqslapp/*.*

EXTRA_DIST = tqslbuild.h.in tqslcertbuild.h.in \
	LICENSE TrustedQSL.spec.in TrustedQSL.spec \
	help/tqslapp/*.* help/tqslcert/*.* Info.plist.in quick \
	touchver.pl key.ico tqsl.ico tqsl-key1.ico setup.iss.in tqslcert.rc.in \
	icons/*.* tqslicons.icns

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = sysconfig.h
CONFIG_CLEAN_FILES = tqslcert.rc setup.iss TrustedQSL.spec
EXTRA_PROGRAMS =
bin_PROGRAMS = tqsl$(EXEEXT) tqslcert$(EXEEXT) @add_targets@
PROGRAMS = $(bin_PROGRAMS)

am_tqsl_OBJECTS = tqsl.$(OBJEXT) extwizard.$(OBJEXT) tqslwiz.$(OBJEXT) \
	dxcc.$(OBJEXT) stationdial.$(OBJEXT) qsodatadialog.$(OBJEXT) \
	tqslvalidator.$(OBJEXT) tqsl_prefs.$(OBJEXT) wxutil.$(OBJEXT)
tqsl_OBJECTS = $(am_tqsl_OBJECTS)
tqsl_LDFLAGS =
am_tqslcert_OBJECTS = tqslcert.$(OBJEXT) crqwiz.$(OBJEXT) dxcc.$(OBJEXT) \
	certtree.$(OBJEXT) tqslcert_prefs.$(OBJEXT) \
	getpassword.$(OBJEXT) extwizard.$(OBJEXT) loadcertwiz.$(OBJEXT) \
	wxutil.$(OBJEXT)
tqslcert_OBJECTS = $(am_tqslcert_OBJECTS)
tqslcert_LDFLAGS =
SCRIPTS = $(noinst_SCRIPTS)


DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(tqsl_SOURCES) $(tqslcert_SOURCES)
DATA = $(nobase_help_DATA)

DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/configure ChangeLog \
	INSTALL Makefile.am TrustedQSL.spec.in aclocal.m4 config.guess \
	config.sub configure configure.in depcomp install-sh missing \
	mkinstalldirs setup.iss.in sysconfig.h.in tqslcert.rc.in
SOURCES = $(tqsl_SOURCES) $(tqslcert_SOURCES)

all: $(BUILT_SOURCES) sysconfig.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure:  $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4):  configure.in 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

sysconfig.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/sysconfig.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status sysconfig.h

$(srcdir)/sysconfig.h.in:  $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/sysconfig.h.in

distclean-hdr:
	-rm -f sysconfig.h stamp-h1
tqslcert.rc: $(top_builddir)/config.status tqslcert.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
setup.iss: $(top_builddir)/config.status setup.iss.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
TrustedQSL.spec: $(top_builddir)/config.status TrustedQSL.spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
tqsl$(EXEEXT): $(tqsl_OBJECTS) $(tqsl_DEPENDENCIES) 
	@rm -f tqsl$(EXEEXT)
	$(CXXLINK) $(tqsl_LDFLAGS) $(tqsl_OBJECTS) $(tqsl_LDADD) $(LIBS)
tqslcert$(EXEEXT): $(tqslcert_OBJECTS) $(tqslcert_DEPENDENCIES) 
	@rm -f tqslcert$(EXEEXT)
	$(CXXLINK) $(tqslcert_LDFLAGS) $(tqslcert_OBJECTS) $(tqslcert_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.cpp.o:
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:
nobase_helpDATA_INSTALL = $(install_sh_DATA)
install-nobase_helpDATA: $(nobase_help_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(helpdir)
	@list='$(nobase_help_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="$$p"; \
	  echo " $(nobase_helpDATA_INSTALL) $$d$$p $(DESTDIR)$(helpdir)/$$f"; \
	  $(nobase_helpDATA_INSTALL) $$d$$p $(DESTDIR)$(helpdir)/$$f; \
	done

uninstall-nobase_helpDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_help_DATA)'; for p in $$list; do \
	  f="$$p"; \
	  echo " rm -f $(DESTDIR)$(helpdir)/$$f"; \
	  rm -f $(DESTDIR)$(helpdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) sysconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) sysconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) sysconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) sysconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkinstalldirs) $(distdir)/. $(distdir)/help/tqslapp $(distdir)/help/tqslcert $(distdir)/icons
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA) sysconfig.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(helpdir)
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-nobase_helpDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-nobase_helpDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags dist dist-all dist-gzip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man \
	install-nobase_helpDATA install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-nobase_helpDATA


tqslbuild.h: tqslbuild.h.in Makefile
	$(PERL) $(srcdir)/touchver.pl $(srcdir)/tqslbuild.h.in BUILD $(BUILD)
	$(CP) $(srcdir)/tqslbuild.h.in tqslbuild.h
	$(TOUCH) $(srcdir)/tqslbuild.h.in

tqslcertbuild.h: tqslcertbuild.h.in Makefile
	$(PERL) $(srcdir)/touchver.pl $(srcdir)/tqslcertbuild.h.in BUILD $(BUILD)
	$(CP) $(srcdir)/tqslcertbuild.h.in tqslcertbuild.h
	$(TOUCH) $(srcdir)/tqslcertbuild.h.in

dmg: TrustedQSL.dmg

TrustedQSL.dmg: dist/TrustedQSL/tqslcert.app dist/TrustedQSL/tqsl.app
	hdiutil create -srcfolder ./dist -volname TrustedQSL -nouuid -noanyowners TrustedQSL.dmg

dist/TrustedQSL/tqslcert.app: tqslcert $(srcdir)/tqslicons.icns $(srcdir)/Info.plist.in
	$(MKDIR) -p dist
	$(MKDIR) -p dist/TrustedQSL
	$(MKDIR) -p dist/TrustedQSL/tqslcert.app
	$(MKDIR) -p dist/TrustedQSL/tqslcert.app/Contents
	$(MKDIR) -p dist/TrustedQSL/tqslcert.app/Contents/MacOS
	$(MKDIR) -p dist/TrustedQSL/tqslcert.app/Contents/Resources
	$(MKDIR) -p dist/TrustedQSL/tqslcert.app/Contents/Resources/Help

	$(CP) $(srcdir)/help/tqslcert/* dist/TrustedQSL/tqslcert.app/Contents/Resources/Help
	$(CP) $(TQSLLIB)/../share/tqsl/config.xml dist/TrustedQSL/tqslcert.app/Contents/Resources
	$(CP) $(srcdir)/tqslicons.icns dist/TrustedQSL/tqslcert.app/Contents/Resources

	$(ECHO) -n "APPL????" >dist/TrustedQSL/tqslcert.app/Contents/PkgInfo
	$(STRIP) tqslcert
	$(CP) tqslcert dist/TrustedQSL/tqslcert.app/Contents/MacOS/tqslcert
	$(CP) $(WXRSRC) dist/TrustedQSL/tqslcert.app/Contents/Resources/tqslcert.rsrc

	$(SED) -e "s/EXEFILENAME/tqslcert/g" \
	    -e "s/ICONFILE/tqslicons.icns/g"  \
	    -e "s/VERSION/$(VERSION)/g"   \
	$(srcdir)/Info.plist.in > dist/TrustedQSL/tqslcert.app/Contents/Info.plist

dist/TrustedQSL/tqsl.app: tqsl $(srcdir)/tqslicons.icns $(srcdir)/Info.plist.in
	$(MKDIR) -p dist
	$(MKDIR) -p dist/TrustedQSL
	$(MKDIR) -p dist/TrustedQSL/tqsl.app
	$(MKDIR) -p dist/TrustedQSL/tqsl.app/Contents
	$(MKDIR) -p dist/TrustedQSL/tqsl.app/Contents/MacOS
	$(MKDIR) -p dist/TrustedQSL/tqsl.app/Contents/Resources
	$(MKDIR) -p dist/TrustedQSL/tqsl.app/Contents/Resources/Help

	$(CP) $(srcdir)/help/tqslapp/* dist/TrustedQSL/tqsl.app/Contents/Resources/Help
	$(CP) $(TQSLLIB)/../share/tqsl/config.xml dist/TrustedQSL/tqsl.app/Contents/Resources
	$(CP) $(srcdir)/tqslicons.icns dist/TrustedQSL/tqsl.app/Contents/Resources

	$(ECHO) -n "APPL????" >dist/TrustedQSL/tqsl.app/Contents/PkgInfo
	$(STRIP) tqsl
	$(CP) tqsl dist/TrustedQSL/tqsl.app/Contents/MacOS/tqsl
	$(CP) $(WXRSRC) dist/TrustedQSL/tqsl.app/Contents/Resources/tqsl.rsrc

	$(SED) -e "s/EXEFILENAME/tqsl/g" \
	    -e "s/ICONFILE/tqslicons.icns/g"  \
	    -e "s/VERSION/$(VERSION)/g"   \
	$(srcdir)/Info.plist.in > dist/TrustedQSL/tqsl.app/Contents/Info.plist

tqslcert-resources.o: tqslcert.rc key.ico tqsl.ico tqsl-key1.ico
	windres --include-dir=@WXDIR@/include -i tqslcert.rc -o tqslcert-resources.o $(RESFLAGS)

quick.txt:
	unix2dos -n $(srcdir)/quick quick.txt

ChangeLog.txt:
	unix2dos -n $(srcdir)/ChangeLog ChangeLog.txt

LICENSE.txt:
	unix2dos -n $(srcdir)/LICENSE LICENSE.txt

setup-is.iss: setup.iss
	unix2dos -n setup.iss setup-is.iss

installer: all tqsl-@WINVER@.exe

tqsl-@WINVER@.exe: tqsl$(EXEEXT) tqslcert$(EXEEXT) quick.txt ChangeLog.txt \
	setup-is.iss LICENSE.txt
	strip tqsl$(EXEEXT)
	strip tqslcert$(EXEEXT)
	cmd /c '"@INNODIR@/ISCC.exe" setup-is.iss' || exit 1

helpdir:
	test -e help || $(LN_S) $(srcdir)/help help

icondir:
	test -e icons || $(LN_S) $(srcdir)/icons icons
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
