/***************************************************************************
                          dxcc.cpp  -  description
                             -------------------
    begin                : Tue Jun 18 2002
    copyright            : (C) 2002 by ARRL
    author               : Jon Bloom
    email                : jbloom@arrl.org
    revision             : $Id$
 ***************************************************************************/

#include <stdlib.h>
#include <string.h>

#include "dxcc.h"

bool DXCC::_init = false;

static int num_entities = 0;

static struct _dxcc_entity {
	int number;
	char *name;
} *entity_list = 0;

static struct _dxcc_entity default_entity_list[] = {
	{ 1, "CANADA" },
	{ 2, "ABU AIL IS" },
	{ 3, "AFGHANISTAN" },
	{ 4, "AGALEGA & ST BRANDON" },
	{ 5, "ALAND IS" },
	{ 6, "ALASKA" },
	{ 7, "ALBANIA" },
	{ 8, "ALDABRA" },
	{ 9, "AMERICAN SAMOA" },
	{ 10, "AMSTERDAM & ST PAUL" },
	{ 11, "ANDAMAN & NICOBAR IS" },
	{ 12, "ANGUILLA" },
	{ 13, "ANTARCTICA" },
	{ 14, "ARMENIA" },
	{ 15, "ASIATIC RUSSIA" },
	{ 16, "AUCKLAND & CAMPBELL" },
	{ 17, "AVES ISLAND" },
	{ 18, "AZERBAIJAN" },
	{ 19, "BAJO NUEVO" },
	{ 20, "BAKER, HOWLAND IS" },
	{ 21, "BALEARIC IS" },
	{ 22, "BELAU (T8)" },
	{ 23, "BLENHEIM REEF" },
	{ 24, "BOUVET" },
	{ 25, "BRITISH N. BORENO" },
	{ 26, "BRITISH SOMALI" },
	{ 27, "BELARUS" },
	{ 28, "CANAL ZONE" },
	{ 29, "CANARY IS" },
	{ 30, "CELEBE/MOLUCCA IS" },
	{ 31, "C KIRIBATI" },
	{ 32, "CEUTA & MELILLA" },
	{ 33, "CHAGOS" },
	{ 34, "CHATHAM IS" },
	{ 35, "CHRISTMAS IS" },
	{ 36, "CLIPPERTON IS" },
	{ 37, "COCOS ISLAND" },
	{ 38, "COCOS-KEELING IS" },
	{ 39, "COMOROS (FB8)" },
	{ 40, "CRETE" },
	{ 41, "CROZET" },
	{ 42, "DAMAO, DUI" },
	{ 43, "DESECHEO IS" },
	{ 44, "DESROCHES" },
	{ 45, "DODECANESE" },
	{ 46, "EAST MALAYSIA" },
	{ 47, "EASTER IS" },
	{ 48, "EASTERN KIRIBATI" },
	{ 49, "EQUATORIAL GUINEA" },
	{ 50, "MEXICO" },
	{ 51, "ERITREA" },
	{ 52, "ESTONIA" },
	{ 53, "ETHIOPIA" },
	{ 54, "EUROPEAN RUSSIA" },
	{ 55, "FARQUHAR" },
	{ 56, "FERNANDO DE NORONHA" },
	{ 57, "FRENCH EQ. AFRICA" },
	{ 58, "FRENCH INDO-CHINA" },
	{ 59, "FRENCH WEST AFRICA" },
	{ 60, "BAHAMAS" },
	{ 61, "FRANZ JOSEF LAND" },
	{ 62, "BARBADOS" },
	{ 63, "FRENCH GUIANA" },
	{ 64, "BERMUDA" },
	{ 65, "BRITISH VIRGIN IS" },
	{ 66, "BELIZE" },
	{ 67, "FRENCH INDIA" },
	{ 68, "SAUDI/KUWAIT N.Z." },
	{ 69, "CAYMAN ISLANDS" },
	{ 70, "CUBA ADIF:CM" },
	{ 71, "GALAPAGOS" },
	{ 72, "DOMINICAN REPUBLIC" },
	{ 74, "EL SALVADOR" },
	{ 75, "GEORGIA" },
	{ 76, "GUATEMALA" },
	{ 77, "GRENADA" },
	{ 78, "HAITI" },
	{ 79, "GUADELOUPE" },
	{ 80, "HONDURAS" },
	{ 81, "GERMANY" },
	{ 82, "JAMAICA" },
	{ 84, "MARTINIQUE" },
	{ 85, "BONAIRE,CURACAO" },
	{ 86, "NICARAGUA" },
	{ 88, "PANAMA" },
	{ 89, "TURKS & CAICOS IS" },
	{ 90, "TRINIDAD & TOBAGO" },
	{ 91, "ARUBA" },
	{ 93, "GEYSER REEF" },
	{ 94, "ANTIGUA & BARBUDA" },
	{ 95, "DOMINICA" },
	{ 96, "MONTSERRAT" },
	{ 97, "ST LUCIA" },
	{ 98, "ST VINCENT" },
	{ 99, "GLORIOSO IS" },
	{ 100, "ARGENTINA" },
	{ 101, "GOA" },
	{ 102, "GOLD COAST/TOGOLND" },
	{ 103, "GUAM" },
	{ 104, "BOLIVIA" },
	{ 105, "GUANTANAMO BAY" },
	{ 106, "GUERNSEY" },
	{ 107, "REPUBLIC OF GUINEA" },
	{ 108, "BRAZIL" },
	{ 109, "GUINEA-BISSAU" },
	{ 110, "HAWAII" },
	{ 111, "HEARD IS" },
	{ 112, "CHILE" },
	{ 113, "IFNI" },
	{ 114, "ISLE OF MAN" },
	{ 115, "ITALIAN SOMALI" },
	{ 116, "COLOMBIA" },
	{ 117, "ITU GENEVA" },
	{ 118, "JAN MAYEN" },
	{ 119, "JAVA" },
	{ 120, "ECUADOR" },
	{ 122, "JERSEY" },
	{ 123, "JOHNSTON IS" },
	{ 124, "JUAN DE NOVA" },
	{ 125, "JUAN FERNANDEZ" },
	{ 126, "KALININGRAD" },
	{ 127, "KAMARAN IS" },
	{ 128, "KARELO-FINN REP" },
	{ 129, "GUYANA" },
	{ 130, "KAZAKHSTAN" },
	{ 131, "KERGUELEN" },
	{ 132, "PARAGUAY" },
	{ 133, "KERMADEC" },
	{ 134, "KINGMAN REEF" },
	{ 135, "KYRGYZSTAN" },
	{ 136, "PERU" },
	{ 137, "SOUTH KOREA" },
	{ 138, "KURE ISLAND" },
	{ 139, "KURIA MURIA IS" },
	{ 140, "SURINAME" },
	{ 141, "FALKLAND IS" },
	{ 142, "LACCADIVE ISLANDS" },
	{ 143, "LAOS" },
	{ 144, "URUGUAY" },
	{ 145, "LATVIA" },
	{ 146, "LITHUANIA" },
	{ 147, "LORD HOWE IS" },
	{ 148, "VENEZUELA" },
	{ 149, "AZORES" },
	{ 150, "AUSTRALIA" },
	{ 151, "MALYJ VYSOTSKI IS (R1MV)" },
	{ 152, "MACAO" },
	{ 153, "MACQUARIE IS" },
	{ 154, "YEMEN ARAB REP" },
	{ 155, "MALAYA" },
	{ 157, "NAURU" },
	{ 158, "VANUATU" },
	{ 159, "MALDIVE IS" },
	{ 160, "TONGA" },
	{ 161, "MALPELO IS" },
	{ 162, "NEW CALEDONIA" },
	{ 163, "PAPUA NEW GUINEA" },
	{ 164, "MANCHURIA" },
	{ 165, "MAURITIUS IS" },
	{ 166, "MARIANA IS" },
	{ 167, "MARKET REEF" },
	{ 168, "MARSHALL IS" },
	{ 169, "MAYOTTE" },
	{ 170, "NEW ZEALAND" },
	{ 171, "MELLISH REEF" },
	{ 172, "PITCAIRN IS" },
	{ 173, "MICRONESIA" },
	{ 174, "MIDWAY IS" },
	{ 175, "FRENCH POLYNESIA" },
	{ 176, "FIJI" },
	{ 177, "MINAMI TORISHIMA" },
	{ 178, "MINERVA REEF" },
	{ 179, "MOLDAVIA" },
	{ 180, "MT ATHOS (SY)" },
	{ 181, "MOZAMBIQUE" },
	{ 182, "NAVASSA IS" },
	{ 183, "DUTCH BORNEO" },
	{ 184, "NETHER N. GUNIEA" },
	{ 185, "SOLOMON ISLANDS" },
	{ 186, "NEWFOUNDLAND/LAB" },
	{ 187, "NIGER" },
	{ 188, "NIUE" },
	{ 189, "NORFOLK IS" },
	{ 190, "WESTERN SAMOA" },
	{ 191, "N COOK IS" },
	{ 192, "OGASAWARA" },
	{ 193, "OKINAWA" },
	{ 194, "OKINO TORI-SHIMA" },
	{ 195, "PAGALU (ANNOBAR IS)" },
	{ 196, "PALESTINE" },
	{ 197, "PALMYRA & JARVIS IS" },
	{ 198, "PAPUA TERR" },
	{ 199, "PETER I IS" },
	{ 200, "PORTUGUESE TIMOR" },
	{ 201, "PRINCE EDWARD & MARION" },
	{ 202, "PUERTO RICO" },
	{ 203, "ANDORRA" },
	{ 204, "REVILLA GIGEDO" },
	{ 205, "ASCENSION ISLAND" },
	{ 206, "AUSTRIA" },
	{ 207, "RODRIGUEZ IS" },
	{ 208, "RUANDA-URUNDI" },
	{ 209, "BELGIUM" },
	{ 210, "SAAR" },
	{ 211, "SABLE ISLAND" },
	{ 212, "BULGARIA" },
	{ 213, "SAINT MARTIN (FJ)" },
	{ 214, "CORSICA" },
	{ 215, "CYPRUS" },
	{ 216, "SAN ANDREAS & PROVIDENCIA" },
	{ 217, "SAN FELIX" },
	{ 218, "CZECHOSLOVAKIA" },
	{ 219, "SAO TOME & PRINCIPE" },
	{ 220, "SARAWAK" },
	{ 221, "DENMARK" },
	{ 222, "FAROE IS" },
	{ 223, "ENGLAND" },
	{ 224, "FINLAND" },
	{ 225, "SARDINIA" },
	{ 226, "SAUDI/IRAQ N.Z." },
	{ 227, "FRANCE" },
	{ 228, "SERRANA BANK" },
	{ 229, "GERMAN DEM. REP." },
	{ 230, "FED REP OF GERMANY" },
	{ 231, "SIKKIM" },
	{ 232, "SOMALI" },
	{ 233, "GIBRALTAR" },
	{ 234, "S COOK IS" },
	{ 235, "SOUTH GEORGIA IS" },
	{ 236, "GREECE" },
	{ 237, "GREENLAND" },
	{ 238, "SOUTH ORKNEY IS" },
	{ 239, "HUNGARY" },
	{ 240, "SOUTH SANDWICH ISLANDS" },
	{ 241, "SOUTH SHETLAND ISLANDS" },
	{ 242, "ICELAND" },
	{ 243, "DEM REP OF YEMEN" },
	{ 244, "SOUTHERN SUDAN" },
	{ 245, "IRELAND" },
	{ 246, "MALTA, SOVERIGN" },
	{ 247, "SPRATLY IS" },
	{ 248, "ITALY" },
	{ 249, "ST KITTS & NEVIS" },
	{ 250, "ST HELENA IS" },
	{ 251, "LIECHTENSTEIN" },
	{ 252, "ST PAUL ISLAND" },
	{ 253, "ST PETER & ST PAUL RKS" },
	{ 254, "LUXEMBOURG" },
	{ 255, "ST MAARTEN" },
	{ 256, "MADEIRA IS" },
	{ 257, "MALTA" },
	{ 258, "SUMATRA" },
	{ 259, "SVALBARD IS" },
	{ 260, "MONACO" },
	{ 261, "SWAN ISLAND" },
	{ 262, "TADZHIKISTAN" },
	{ 263, "NETHERLANDS" },
	{ 264, "TANGIER" },
	{ 265, "NORTHERN IRELAND" },
	{ 266, "NORWAY" },
	{ 267, "TERR NEW GUINEA" },
	{ 268, "TIBET" },
	{ 269, "POLAND" },
	{ 270, "TOKELAU IS" },
	{ 271, "TRIESTE" },
	{ 272, "PORTUGAL" },
	{ 273, "TRINDADE & MARTIN" },
	{ 274, "TRISTAN DA CUNHA" },
	{ 275, "ROMANIA" },
	{ 276, "TROMELIN" },
	{ 277, "ST PIERRE & MIQUELON" },
	{ 278, "SAN MARINO" },
	{ 279, "SCOTLAND" },
	{ 280, "TURKMENISTAN" },
	{ 281, "SPAIN" },
	{ 282, "TUVALU" },
	{ 283, "UK BASES ON CYPRUS" },
	{ 284, "SWEDEN" },
	{ 285, "VIRGIN IS" },
	{ 286, "UGANDA" },
	{ 287, "SWITZERLAND" },
	{ 288, "UKRAINE" },
	{ 289, "HQ UNITED NATIONS" },
	{ 291, "UNITED STATES" },
	{ 292, "UZBEKISTAN" },
	{ 293, "VIETNAM" },
	{ 294, "WALES" },
	{ 295, "VATICAN" },
	{ 296, "YUGOSLAVIA" },
	{ 297, "WAKE IS" },
	{ 298, "WALLIS & FUTUNA" },
	{ 299, "WEST MALAYSIA" },
	{ 301, "W KIRIBATI" },
	{ 302, "WESTERN SAHARA" },
	{ 303, "WILLIS IS" },
	{ 304, "BAHRAIN" },
	{ 305, "BANGLADESH" },
	{ 306, "BHUTAN" },
	{ 307, "ZANZIBAR" },
	{ 308, "COSTA RICA" },
	{ 309, "MYANMAR" },
	{ 312, "KAMPUCHEA (CAMBODIA)" },
	{ 315, "SRI LANKA" },
	{ 318, "CHINA" },
	{ 321, "HONG KONG" },
	{ 324, "INDIA" },
	{ 327, "INDONESIA" },
	{ 330, "IRAN" },
	{ 333, "IRAQ" },
	{ 336, "ISRAEL" },
	{ 339, "JAPAN" },
	{ 342, "JORDAN" },
	{ 345, "BRUNEI" },
	{ 348, "KUWAIT" },
	{ 354, "LEBANON" },
	{ 363, "MONGOLIA" },
	{ 369, "NEPAL" },
	{ 370, "OMAN" },
	{ 372, "PAKISTAN" },
	{ 375, "PHILIPPINES" },
	{ 376, "QATAR" },
	{ 378, "SAUDI ARABIA" },
	{ 379, "SEYCHELLES" },
	{ 381, "SINGAPORE" },
	{ 382, "DJIBOUTI" },
	{ 384, "SYRIA" },
	{ 386, "TAIWAN" },
	{ 387, "THAILAND" },
	{ 390, "TURKEY" },
	{ 391, "UNITED ARAB EMIRATES" },
	{ 400, "ALGERIA" },
	{ 401, "ANGOLA" },
	{ 402, "BOTSWANA" },
	{ 404, "BURUNDI" },
	{ 406, "CAMEROON" },
	{ 408, "CENTRAL AFRICAN" },
	{ 409, "CAPE VERDE" },
	{ 410, "CHAD" },
	{ 411, "COMOROS (D6)" },
	{ 412, "CONGO" },
	{ 414, "ZAIRE" },
	{ 416, "BENIN" },
	{ 420, "GABON" },
	{ 422, "THE GAMBIA" },
	{ 424, "GHANA" },
	{ 428, "IVORY COAST" },
	{ 430, "KENYA" },
	{ 432, "LESOTHO" },
	{ 433, "NORTH KOREA (HP)" },
	{ 434, "LIBERIA" },
	{ 436, "LIBYA" },
	{ 438, "MADAGASCAR" },
	{ 440, "MALAWI" },
	{ 442, "MALI" },
	{ 444, "MAURITANIA" },
	{ 446, "MOROCCO" },
	{ 450, "NIGERIA" },
	{ 452, "ZIMBABWE" },
	{ 453, "REUNION" },
	{ 454, "RWANDA" },
	{ 456, "SENEGAL" },
	{ 458, "SIERRA LEONE" },
	{ 460, "ROTUMA IS" },
	{ 462, "SOUTH AFRICA" },
	{ 464, "NAMIBIA" },
	{ 466, "SUDAN" },
	{ 468, "SWAZILAND" },
	{ 470, "TANZANIA" },
	{ 474, "TUNISIA" },
	{ 478, "EGYPT" },
	{ 480, "BURKINA-FASO" },
	{ 482, "ZAMBIA" },
	{ 483, "TOGO" },
	{ 488, "WALVIS BAY" },
	{ 489, "CONWAY REEF" },
	{ 490, "BANABA ISLAND" },
	{ 492, "YEMEN" },
	{ 493, "PENGUIN ISLANDS" },
	{ 497, "CROATIA" },
	{ 499, "SLOVENIA" },
	{ 501, "BOSNIA-HERZEGOVINA" },
	{ 502, "MACEDONIA" },
	{ 503, "CZECH REPUBLIC" },
	{ 504, "SLOVAK REPUBLIC" },
	{ 505, "PRATAS IS" },
	{ 506, "SCARBOROUGH REEF" },
	{ 507, "TEMOTU IS" },
	{ 508, "AUSTRAL IS" },
	{ 509, "MARQUESAS IS" },
	{ 510, "PALESTINE (E4)" },
	{ 513, "DUCIE IS (VP6)" },
	{ 512, "CHESTERFIELD IS (TX0)" },
	{ 511, "EAST TIMOR (4W)" },
};

static int
_ent_cmp(const void *a, const void *b) {
	return strcasecmp(((struct _dxcc_entity *)a)->name, ((struct _dxcc_entity *)b)->name);
}

bool
DXCC::init() {
	if (!_init) {
		entity_list = default_entity_list;
		num_entities = sizeof default_entity_list / sizeof default_entity_list[0];
		qsort(entity_list, num_entities, sizeof (struct _dxcc_entity), &_ent_cmp);
	}
	_init = true;
	return _init;
}

bool
DXCC::getFirst() {
	if (!init())
		return false;
	_index = -1;
	return getNext();
}

bool
DXCC::getNext() {
	int newidx = _index+1;
	if (newidx < 0 || newidx >= num_entities)
		return false;
	_index = newidx;
	_number = entity_list[newidx].number;
	_name = entity_list[newidx].name;
	return true;
}

bool
DXCC::getByEntity(int e) {
	if (!init())
		return false;
	for (int i = 0; i < num_entities; i++) {
		if (entity_list[i].number == e) {
			_index = i;
			_number = entity_list[i].number;
			_name = entity_list[i].name;
			return true;
		}
	}
	_number = 0;
	_name = "<NONE>";
	return false;
}


