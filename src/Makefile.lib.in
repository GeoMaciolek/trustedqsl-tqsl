LIBS=-lexpat -lcrypto -liberty @LIBS@
OPENSSL=@OPENSSL@
EXPAT=@EXPAT@
CXXFLAGS = -O0 -g3 -Wall -I. -I$(WXWIN)/src/zlib -I$(OPENSSL)/include -I$(EXPAT)/include $(INCDIR) @DEFS@
LDFLAGS = -L. -L$(OPENSSL)/lib -L$(EXPAT)/lib -L$(WXWIN)/lib $(LIBS) -lstdc++

PTARGETS = gen_crq load_cert station_loc dumptqsldata converter

MINGW32=@MINGW32@

ifeq ($(MINGW32),yes)
  TARGETS=$(PTARGETS) tqsllib.dll
  ZLIB=zlib
  MYLIB=tqsllibd
  OSUF=o
else
  TARGETS=$(PTARGETS)
  ZLIB=z
  MYLIB = tqsllib
  OSUF=lo
  LIBTOOL = libtool
  LIBTOOL_PATH = -rpath /usr/lib
endif

OBJS = tqsllib.$(OSUF) openssl_cert.$(OSUF) adif.$(OSUF)  xml.$(OSUF) \
	location.$(OSUF) tqslconvert.$(OSUF) cabrillo.$(OSUF)

all: $(TARGETS)

gen_crq$(OBJSUF): gen_crq.o lib$(MYLIB).a
	$(LIBTOOL) gcc -o gen_crq gen_crq.o -l$(MYLIB) $(LDFLAGS) -l$(ZLIB)

load_cert$(OBJSUF): load_cert.o lib$(MYLIB).a
	$(LIBTOOL) gcc -o load_cert load_cert.o -l$(MYLIB) $(LDFLAGS) -l$(ZLIB)
	
converter$(OBJSUF): converter.o lib$(MYLIB).a
	$(LIBTOOL) gcc -o converter converter.o -l$(MYLIB) $(LDFLAGS) -l$(ZLIB)
	
station_loc$(OBJSUF): station_loc.o lib$(MYLIB).a
	$(LIBTOOL) gcc -o station_loc station_loc.o -l$(MYLIB) $(LDFLAGS) -l$(ZLIB)
	
dumptqsldata$(OBJSUF): dumptqsldata.o lib$(MYLIB).a
	$(LIBTOOL) gcc -o dumptqsldata dumptqsldata.o -l$(MYLIB) $(LDFLAGS) -l$(ZLIB)
	
include tqsllib.depends

ifeq ($(MINGW32),yes)

libtqsllib.a: $(OBJS)
	  ar q libtqsllib.a $(OBJS)
	  ranlib libtqsllib.a

else

libtqsllib.a: $(OBJS)
	$(LIBTOOL) gcc $(LIBTOOL_PATH) -g -O -o libtqsllib.la $(OBJS)

endif

libtqsllibd.a: tqsllib.dll

tqsllib.dll: libtqsllib.a
	dllwrap.exe --output-def tqsllib.def --output-exp tqsllib.exports --dllname tqsllib.dll \
		--output-lib libtqsllibd.a libtqsllib.a -L$(OPENSSL)/lib \
		-L$(EXPAT)/lib -lexpat -L$(WXWIN)/lib \
		-lzlib -lcrypto -lgdi32 -lstdc++
	strip tqsllib.dll

clean:
	rm -f *.exe *.dll *.o *.lo *.a *.la *~ xxx.*
	rm -rf .libs

%.o: %.cpp
	$(LIBTOOL) g++ $(CXXFLAGS) -c -o $@ $*.cpp

%.lo: %.cpp
	$(LIBTOOL) g++ $(CXXFLAGS) -c -o $@ $*.cpp
